<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Contagem‚ù§Ô∏è</title>
  <link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet" />

  <style>
    * {
      box-sizing: border-box;
    }

    body {
      background: #0b001f;
      font-family: 'Press Start 2P', cursive;
      color: #ff6fa3;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      margin: 0;
      overflow: hidden;
      text-align: center;
      user-select: none;
    }

    h1 {
      font-size: 1.4rem;
      margin: 0 0 130px 0;
      text-shadow: 2px 2px 0 #ff1a66, -2px 2px 0 #ff1a66,
                   2px -2px 0 #ff1a66, -2px -2px 0 #ff1a66;
      letter-spacing: 1px;
      z-index: 10;
      position: relative;
    }

    .bar-wrapper {
      position: relative;
      width: 90vw;
      max-width: 600px;
      height: 40px;
      background: #2b004d;
      border: 4px solid #ff4da6;
      box-shadow: inset 0 0 0 4px #ff99cc, 0 0 10px #ff4da6;
    }

    .progress-fill {
      height: 100%;
      background: repeating-linear-gradient(45deg, #ff4da6, #ff4da6 4px, #ff85c1 4px, #ff85c1 8px);
      width: 0;
      transition: width 1s steps(10);
    }

    .avatar {
      position: absolute;
      bottom: 44px;
      width: 80px;
      height: 80px;
      border: 4px solid #ff4da6;
      background-size: cover;
      background-position: center;
      box-shadow: 0 0 0 2px #ff85c1, 2px 2px 0 #ff1a66;
      image-rendering: auto;
      border-radius: 8px;
      z-index: 20;
    }

    .avatar.fixed {
      right: -40px;
    }

    #avatarMinha {
      border-color: #ff85c1;
      filter: drop-shadow(1px 1px 0 #ff1a66);
    }

    .days-left {
      margin-top: 40px;
      font-size: 0.85rem;
      color: #ff6fa3;
      text-shadow: 1px 1px 0 #a8004d;
      letter-spacing: 1px;
      z-index: 10;
      position: relative;
    }

    .heart {
      position: fixed;
      width: 22px;
      height: 20px;
      background: #ff4da6;
      clip-path: polygon(50% 0%, 100% 35%, 80% 100%, 50% 85%, 20% 100%, 0% 35%);
      animation: floatUp 6s linear forwards;
      opacity: 0.8;
      pointer-events: none;
      z-index: 99999;
    }

    @keyframes floatUp {
      0% {
        transform: translateY(0) scale(1);
        opacity: 0.8;
      }
      100% {
        transform: translateY(-100vh) scale(1.3);
        opacity: 0;
      }
    }

    .firework {
      position: fixed;
      width: 8px;
      height: 8px;
      background-color: #ff4da6;
      border-radius: 50%;
      filter: drop-shadow(0 0 4px #ff4da6);
      pointer-events: none;
      z-index: 9999;
    }

    .celebration {
      position: fixed;
      top: 0; left: 0;
      width: 100vw;
      height: 100vh;
      background: #0b001f;
      z-index: 1000;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      font-size: 1rem;
      color: #ff4da6;
      text-shadow: 2px 2px 0 #ff1a66, -2px 2px 0 #ff1a66,
                   2px -2px 0 #ff1a66, -2px -2px 0 #ff1a66;
    }

    .celebration img {
      width: 280px;
      height: auto;
      border: 4px solid #ff4da6;
      margin-bottom: 20px;
      image-rendering: auto;
      box-shadow: 0 0 10px #ff4da6;
    }

    @media (max-width: 500px) {
      .avatar, .avatar.fixed {
        width: 60px;
        height: 60px;
        bottom: 38px;
        right: -30px;
      }

      h1 {
        font-size: 1rem;
        margin-bottom: 110px;
      }

      .bar-wrapper {
        height: 30px;
        border-width: 3px;
      }

      .days-left {
        font-size: 0.7rem;
      }

      .celebration {
        font-size: 0.85rem;
      }

      .celebration img {
        width: 200px;
      }
    }
  </style>
</head>
<body>

  <h1>CONTANDO OS DIAS PARA TE VER ‚ù§Ô∏è</h1>

  <div class="bar-wrapper" id="progressBar">
    <div class="progress-fill" id="progressFill"></div>
    <div id="avatarMinha" class="avatar"></div>
    <div class="avatar fixed" style="background-image: url('ana.jpg');"></div>
  </div>

  <div class="days-left" id="counterText"></div>

  <div class="celebration" id="celebrationBox" style="display:none;">
    <img src="foto-juntos.jpg" alt="Juntos novamente" />
    <p>JUNTOS NOVAMENTE üíû</p>
  </div>

  <script>
    function criarDataBrasilia(ano, mes, dia) {
      return new Date(Date.UTC(ano, mes - 1, dia, 3, 0, 0));
    }

    const dataInicio = criarDataBrasilia(2025, 5, 18);
    const dataFinal = criarDataBrasilia(2025, 6, 18);
    const hoje = new Date();

    function diferencaDias(data1, data2) {
      const msPorDia = 1000 * 60 * 60 * 24;
      const utc1 = Date.UTC(data1.getFullYear(), data1.getMonth(), data1.getDate());
      const utc2 = Date.UTC(data2.getFullYear(), data2.getMonth(), data2.getDate());
      return Math.floor((utc2 - utc1) / msPorDia);
    }

    const diasTotais = diferencaDias(dataInicio, dataFinal);
    const diasPassados = diferencaDias(dataInicio, hoje);
    const diasRestantes = diferencaDias(hoje, dataFinal);

    const porcentagemBruta = diasPassados / diasTotais;
    const porcentagem = Math.min(100, Math.max(0, porcentagemBruta)) * 100;

    const progressFill = document.getElementById("progressFill");
    const minhaFoto = document.getElementById("avatarMinha");
    const progressBar = document.getElementById("progressBar");
    const fotoDela = document.querySelector('.avatar.fixed');
    const celebrationBox = document.getElementById("celebrationBox");
    const counterText = document.getElementById("counterText");

    minhaFoto.style.backgroundImage = "url('arthur.jpg')";
    fotoDela.style.backgroundImage = "url('ana.jpg')";

    progressFill.style.width = porcentagem + "%";
    function moverAvatar() {
  const larguraBarra = progressBar.offsetWidth;
  const larguraMinhaFoto = minhaFoto.offsetWidth;
  const larguraDela = fotoDela.offsetWidth;

  const posMax = larguraBarra - larguraMinhaFoto;
  let pos = posMax * (porcentagem / 100);

  // Posi√ß√£o fixa da outra avatar
  const posFixa = larguraBarra - larguraDela;

  // Dist√¢ncia m√≠nima desejada entre os avatares (em pixels)
  const distanciaMinima = 10;

  // Se estiver muito perto, limitar a posi√ß√£o
  if (pos + larguraMinhaFoto > posFixa - distanciaMinima) {
    pos = posFixa - larguraMinhaFoto - distanciaMinima;
  }

  minhaFoto.style.left = pos + "px";
}

    moverAvatar();

    function atualizarTexto() {
      if (diasRestantes > 1) {
        counterText.textContent = `Faltam ${diasRestantes} dia(s) para a gente se ver!`;
      } else if (diasRestantes === 1) {
        counterText.textContent = `Falta 1 dia para a gente se ver!`;
      } else if (diasRestantes === 0) {
        counterText.textContent = `Hoje √© o dia! ‚ù§Ô∏è`;
        celebrationBox.style.display = "flex";
        criarFogos();
      } else {
        counterText.textContent = `J√° nos vimos! ‚ù§Ô∏è`;
      }
    }
    atualizarTexto();

    function criarFogos() {
      for (let i = 0; i < 60; i++) {
        const fogo = document.createElement("div");
        fogo.classList.add("firework");
        fogo.style.top = (window.innerHeight - Math.random() * window.innerHeight) + "px";
        fogo.style.left = Math.random() * window.innerWidth + "px";
        fogo.style.animationDuration = (Math.random() * 2 + 1) + "s";
        fogo.style.animationDelay = (Math.random() * 2) + "s";
        document.body.appendChild(fogo);
        setTimeout(() => fogo.remove(), 3000);
      }
    }

    function criarCoracao(x, y) {
      const heart = document.createElement("div");
      heart.classList.add("heart");
      heart.style.left = (x - 11) + "px";
      heart.style.top = (y - 10) + "px";
      document.body.appendChild(heart);
      setTimeout(() => heart.remove(), 6000);
    }

    window.addEventListener("click", (e) => {
      criarCoracao(e.clientX, e.clientY);
    });

    // Cora√ß√µes autom√°ticos subindo do rodap√©
    setInterval(() => {
      const x = Math.random() * window.innerWidth;
      const y = window.innerHeight;
      criarCoracao(x, y);
    }, 800);
  </script>

  <!-- M√∫sica de fundo invis√≠vel -->
  <iframe
    id="musicaFundo"
    width="0"
    height="0"
    src="https://www.youtube.com/embed/OowhMq5stCU?autoplay=1&controls=1&mute=1"
    frameborder="0"
    allow="autoplay; encrypted-media"
    allowfullscreen
  ></iframe>
</body>
</html>
